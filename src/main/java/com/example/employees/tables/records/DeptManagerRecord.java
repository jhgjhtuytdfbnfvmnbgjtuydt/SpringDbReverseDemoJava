/**
 * This class is generated by jOOQ
 */
package com.example.employees.tables.records;


import com.example.employees.tables.DeptManager;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeptManagerRecord extends UpdatableRecordImpl<DeptManagerRecord> implements Record4<String, Integer, Date, Date> {

	private static final long serialVersionUID = 670717809;

	/**
	 * Setter for <code>employees.dept_manager.dept_no</code>.
	 */
	public void setDeptNo(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>employees.dept_manager.dept_no</code>.
	 */
	public String getDeptNo() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>employees.dept_manager.emp_no</code>.
	 */
	public void setEmpNo(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>employees.dept_manager.emp_no</code>.
	 */
	public Integer getEmpNo() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>employees.dept_manager.from_date</code>.
	 */
	public void setFromDate(Date value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>employees.dept_manager.from_date</code>.
	 */
	public Date getFromDate() {
		return (Date) getValue(2);
	}

	/**
	 * Setter for <code>employees.dept_manager.to_date</code>.
	 */
	public void setToDate(Date value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>employees.dept_manager.to_date</code>.
	 */
	public Date getToDate() {
		return (Date) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<Integer, String> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, Integer, Date, Date> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<String, Integer, Date, Date> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return DeptManager.DEPT_MANAGER.DEPT_NO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return DeptManager.DEPT_MANAGER.EMP_NO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field3() {
		return DeptManager.DEPT_MANAGER.FROM_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field4() {
		return DeptManager.DEPT_MANAGER.TO_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getDeptNo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getEmpNo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value3() {
		return getFromDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value4() {
		return getToDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DeptManagerRecord value1(String value) {
		setDeptNo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DeptManagerRecord value2(Integer value) {
		setEmpNo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DeptManagerRecord value3(Date value) {
		setFromDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DeptManagerRecord value4(Date value) {
		setToDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DeptManagerRecord values(String value1, Integer value2, Date value3, Date value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached DeptManagerRecord
	 */
	public DeptManagerRecord() {
		super(DeptManager.DEPT_MANAGER);
	}

	/**
	 * Create a detached, initialised DeptManagerRecord
	 */
	public DeptManagerRecord(String deptNo, Integer empNo, Date fromDate, Date toDate) {
		super(DeptManager.DEPT_MANAGER);

		setValue(0, deptNo);
		setValue(1, empNo);
		setValue(2, fromDate);
		setValue(3, toDate);
	}
}
